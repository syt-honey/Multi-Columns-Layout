{"remainingRequest":"/Users/a123/githubRep/Multi-Columns-Layout/node_modules/babel-loader/lib/index.js!/Users/a123/githubRep/Multi-Columns-Layout/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/a123/githubRep/Multi-Columns-Layout/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/a123/githubRep/Multi-Columns-Layout/src/components/MultiColumnsContainer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/a123/githubRep/Multi-Columns-Layout/src/components/MultiColumnsContainer/index.vue","mtime":1619001340874},{"path":"/Users/a123/githubRep/Multi-Columns-Layout/node_modules/cache-loader/dist/cjs.js","mtime":1618913751720},{"path":"/Users/a123/githubRep/Multi-Columns-Layout/node_modules/babel-loader/lib/index.js","mtime":1617162271907},{"path":"/Users/a123/githubRep/Multi-Columns-Layout/node_modules/cache-loader/dist/cjs.js","mtime":1618913751720},{"path":"/Users/a123/githubRep/Multi-Columns-Layout/node_modules/vue-loader/lib/index.js","mtime":1617162281281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTXVsdGlDb2x1bW5zQ29udGFpbmVyIiwKICBwcm9wczoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJvd0dhcDogIiIsCiAgICAgIHJvd0hlaWdodDogIiIKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgZ3JpZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm11bHRpLWNvbHVtbi1jb250YWluZXIiKVswXTsKICAgIHRoaXMucm93R2FwID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoZ3JpZCkuZ2V0UHJvcGVydHlWYWx1ZSgiZ3JpZC1yb3ctZ2FwIikpOwogICAgdGhpcy5yb3dIZWlnaHQgPSBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShncmlkKS5nZXRQcm9wZXJ0eVZhbHVlKCJncmlkLWF1dG8tcm93cyIpKTsKICAgIHRoaXMucG9zaXRpb25Jbml0KCk7CgogICAgd2luZG93Lm9ucmVzaXplID0gZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5wb3NpdGlvbkluaXQoKTsKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBwb3NpdGlvbkluaXQ6IGZ1bmN0aW9uIHBvc2l0aW9uSW5pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZygiaW5pdCIpOwogICAgICB2YXIgYWxsSXRlbXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJncmlkLWl0ZW0iKTsKICAgICAgQXJyYXkuZnJvbShhbGxJdGVtcykubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgX3RoaXMyLnNldFBvc2l0aW9uKGl0ZW0pOwogICAgICB9KTsKICAgIH0sCiAgICBzZXRQb3NpdGlvbjogZnVuY3Rpb24gc2V0UG9zaXRpb24oaXRlbSkgewogICAgICB2YXIgY29udGVudCA9IGl0ZW0ucXVlcnlTZWxlY3RvcigiLmdyaWQtaXRlbS0tY29udGVudCIpOwogICAgICB2YXIgc3BhbiA9IE1hdGguY2VpbChjb250ZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodCAvICh0aGlzLnJvd0hlaWdodCArIHRoaXMucm93R2FwKSk7CiAgICAgIHZhciByb3dFbmQgPSAic3BhbiAiICsgc3BhbjsKICAgICAgaXRlbS5zdHlsZS5ncmlkUm93RW5kID0gcm93RW5kOwogICAgfQogIH0sCiAgZGVzdHJveWVkOiB7Ly8gd2luZG93Lm9ucmVzaXplCiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GARA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AACA,QAAA,IAAA,GAAA,QAAA,CAAA,sBAAA,CAAA,wBAAA,EAAA,CAAA,CAAA;AACA,SAAA,MAAA,GAAA,QAAA,CACA,MAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,gBAAA,CAAA,cAAA,CADA,CAAA;AAGA,SAAA,SAAA,GAAA,QAAA,CACA,MAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,gBAAA,CAAA,gBAAA,CADA,CAAA;AAIA,SAAA,YAAA;;AAEA,IAAA,MAAA,CAAA,QAAA,GAAA,YAAA;AACA,MAAA,KAAA,CAAA,YAAA;AACA,KAFA;AAGA,GAxBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,UAAA,QAAA,GAAA,QAAA,CAAA,sBAAA,CAAA,WAAA,CAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,WAAA,CAAA,IAAA;AACA,OAFA;AAGA,KAPA;AAQA,IAAA,WARA,uBAQA,IARA,EAQA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,aAAA,CAAA,qBAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CACA,OAAA,CAAA,qBAAA,GAAA,MAAA,IAAA,KAAA,SAAA,GAAA,KAAA,MAAA,CADA,CAAA;AAGA,UAAA,MAAA,GAAA,UAAA,IAAA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,UAAA,GAAA,MAAA;AACA;AAfA,GA1BA;AA4CA,EAAA,SAAA,EAAA,CACA;AADA;AA5CA,CAAA","sourcesContent":["<template>\n  <div class=\"multi-column-container\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MultiColumnsContainer\",\n  props: {},\n  data() {\n    return {\n      rowGap: \"\",\n      rowHeight: \"\"\n    };\n  },\n\n  mounted() {\n    const grid = document.getElementsByClassName(\"multi-column-container\")[0];\n    this.rowGap = parseInt(\n      window.getComputedStyle(grid).getPropertyValue(\"grid-row-gap\")\n    );\n    this.rowHeight = parseInt(\n      window.getComputedStyle(grid).getPropertyValue(\"grid-auto-rows\")\n    );\n\n    this.positionInit();\n\n    window.onresize = () => {\n      this.positionInit();\n    };\n  },\n\n  methods: {\n    positionInit() {\n      console.log(\"init\");\n      const allItems = document.getElementsByClassName(\"grid-item\");\n      Array.from(allItems).map((item) => {\n        this.setPosition(item);\n      });\n    },\n    setPosition(item) {\n      const content = item.querySelector(\".grid-item--content\");\n      let span = Math.ceil(\n        content.getBoundingClientRect().height / (this.rowHeight + this.rowGap)\n      );\n      let rowEnd = \"span \" + span;\n      item.style.gridRowEnd = rowEnd;\n    }\n  },\n\n  destroyed: {\n    // window.onresize\n  }\n};\n</script>\n\n\n<style scoped>\n.multi-column-container {\n  display: grid;\n  grid-gap: 10px;\n  grid-auto-rows: 20px;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n</style>\n"],"sourceRoot":"src/components/MultiColumnsContainer"}]}